on:
  pull_request_target:
  workflow_dispatch:
    inputs:
      validate_certs:
        description: 'Use SSL? (validate_certs)'
        required: true
        default: 'false'
        type: choice
        options:
        - true
        - false
      job_template:
        description: 'The Job Template name you want to launch'
        required: true
        type: string


jobs:
  automation_controller_job:
    runs-on: ubuntu-latest
    name: Kick off Automation controller job
    steps:
      - name: Load the ansible-cloud action
        id: controller_job
        uses: ansible-cloud/aap_controller_action@v2.1.5
        with:
          controller_host: ${{ secrets.CONTROLLER_HOST }}
          controller_username: ${{ secrets.CONTROLLER_USERNAME }}
          controller_password: ${{ secrets.CONTROLLER_PASSWORD }}
          job_template: "test job"
          # job_template: "AWS - ec2 enforce owner tag"
          controller_project: "test project"
          extra_vars: "your_region=us-west-1"
          validate_certs: false
        env:
          pull_request_event: ${{ github.event.pull_request.number }}
      - name: Adding markdown
        run: |
          echo "### Ansible Automation Platform - Job Output :rocket:" >> $GITHUB_STEP_SUMMARY
          echo ""  >> $GITHUB_STEP_SUMMARY
          job_output=`cat job_output.txt`
          echo "$job_output" >> $GITHUB_STEP_SUMMARY
          echo ""  >> $GITHUB_STEP_SUMMARY
          echo "```\n$job_output\n```" >> $GITHUB_STEP_SUMMARY
          echo "End of Automation controller output" >> $GITHUB_STEP_SUMMARY

  # GITHUB_STEP_SUMMARY="$GITHUB_STEP_SUMMARY \n $(<job_output.txt)"


  # workshop_job_provision:
  #   runs-on: ubuntu-latest
  #   name: Workshop Provision
  #   steps:
  #     - name: Load the ansible-cloud action to provision
  #       id: workshop_provision
  #       uses: ansible-cloud/aap_controller_action@v1.2.7
  #       with:
  #         controller_host: ${{ secrets.CONTROLLER_HOST }}
  #         controller_username: ${{ secrets.CONTROLLER_USERNAME }}
  #         controller_password: ${{ secrets.CONTROLLER_PASSWORD }}
  #         job_template: "Workshop Provision Job"
  #         extra_vars: "ec2_name_prefix=github-action-test-seanjul15"
  #         validate_certs: false
  #     - name: Workshop Teardown
  #       if: always()
  #       id: workshop_teardown
  #       uses: ansible-cloud/aap_controller_action@v1.2.7
  #       with:
  #         controller_host: ${{ secrets.CONTROLLER_HOST }}
  #         controller_username: ${{ secrets.CONTROLLER_USERNAME }}
  #         controller_password: ${{ secrets.CONTROLLER_PASSWORD }}
  #         job_template: "Workshop teardown Job"
  #         extra_vars: "ec2_name_prefix=github-action-test-seanjul15"
  #         validate_certs: false
